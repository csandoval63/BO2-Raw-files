// clientscripts/mp/zm_buried_buildables.csc

#include clientscripts\mp\zombies\_zm_utility;


// 0x378
prepare_chalk_weapon_list()
{
	level.buildable_wallbuy_weapons = [];
	level.buildable_wallbuy_weapons[0] = "ak74u_zm";
	level.buildable_wallbuy_weapons[1] = "an94_zm";
	level.buildable_wallbuy_weapons[2] = "pdw57_zm";
	level.buildable_wallbuy_weapons[3] = "svu_zm";
	level.buildable_wallbuy_weapons[4] = "tazer_knuckles_zm";
	level.buildable_wallbuy_weapons[5] = "870mcs_zm";
	level.buildable_wallbuy_weapon_models = [];
	level.buildable_wallbuy_weapon_models["ak74u_zm"] = undefined;
	level.buildable_wallbuy_weapon_models["an94_zm"] = undefined;
	level.buildable_wallbuy_weapon_models["pdw57_zm"] = undefined;
	level.buildable_wallbuy_weapon_models["svu_zm"] = undefined;
	level.buildable_wallbuy_weapon_models["tazer_knuckles_zm"] = undefined;
	level.buildable_wallbuy_weapon_models["870mcs_zm"] = undefined;
	level.buildable_wallbuy_weapon_angles = [];
	level.buildable_wallbuy_weapon_angles["ak74u_zm"] = undefined;
	level.buildable_wallbuy_weapon_angles["an94_zm"] = undefined;
	level.buildable_wallbuy_weapon_angles["pdw57_zm"] = undefined;
	level.buildable_wallbuy_weapon_angles["svu_zm"] = undefined;
	level.buildable_wallbuy_weapon_angles["tazer_knuckles_zm"] = undefined;
	level.buildable_wallbuy_weapon_angles["870mcs_zm"] = undefined;
// SP = 0x0 - check OK
}

// 0x438
init_buildables( buildablesenabledlist )
{
	registerclientfield( "scriptmover", "buildable_glint_fx", 12000, 1, "int", ::buildable_setup_glint );
	level.buildable_slot_count = max( 1, 2 ) + 1;
	level.buildable_clientfields = [];
	level.buildable_clientfields[0] = "buildable";
	level.buildable_clientfields[1] = "buildable" + "_pu";
	level.buildable_piece_counts = [];
	level.buildable_piece_counts[0] = 15;
	level.buildable_piece_counts[1] = 4;
	level.buildable_clientfields[2] = "buildable" + "_sq";
	level.buildable_piece_counts[2] = 13;
	foreach ( buildable in buildablesenabledlist )
	{
		add_zombie_buildable( buildable );
	}
	level thread set_clientfield_buildables_code_callbacks();
// SP = 0x0 - check OK
}

// 0x514
include_buildables( buildablesenabledlist )
{
	foreach ( buildable in buildablesenabledlist )
	{
		include_buildable( buildable );
	}
// SP = 0x0 - check OK
}

// 0x558
buildable_setup_glint( localclientnum, oldval, newval, bnewent, binitialsnap, fieldname, bwasdemojump )
{
	offset = buildable_setup_glint_offset();
	self.buildable_glint = playfx( localclientnum, level._effect["fx_buried_key_glint"], self.origin + offset );
	stopfx( localclientnum, self.buildable_glint );
// SP = 0x0 - check OK
}

// 0x5C0
buildable_setup_glint_offset()
{
	offset = ( 0, 0, 0 );
	offset = vector_scale( ( 0, 0, 1 ), 14.5 );
	offset = vector_scale( ( 0, 0, 1 ), 11 );
	return offset;
// SP = 0x0 - check OK
}
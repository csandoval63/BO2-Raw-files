// clientscripts/mp/mp_carrier.csc

#include clientscripts\mp\mp_carrier_amb;
#include clientscripts\mp\_audio;
#include clientscripts\mp\mp_carrier_fx;
#include clientscripts\mp\_load;
#include clientscripts\mp\_rewindobjects;
#include clientscripts\mp\_utility;


// 0x354
main()
{
	level.worldmapx = -4540;
	level.worldmapy = -128;
	level.worldlat = 37.5446;
	level.worldlong = 163.425;
	clientscripts\mp\_load::main();
	clientscripts\mp\mp_carrier_fx::main();
	thread clientscripts\mp\_audio::audio_init( 0 );
	thread clientscripts\mp\mp_carrier_amb::main();
	setsaveddvar( "compassmaxrange", "2100" );
	setsaveddvar( "sm_sunsamplesizenear", 0.39 );
	setsaveddvar( "sm_sunshadowsmall", 1 );
	waitforclient( 0 );
/#
	println( "*** Client : mp_carrier running..." );
#/
	thread vista_ships_init( 0 );
// SP = 0x0 - check OK
}

// 0x404
vista_ships_init( clientnum )
{
	waitforclient( clientnum );
	level.boatswaytime = getdvarfloatdefault( "cscr_boatswaytime", 4 );
	level.boatswayslowdowntime = getdvarfloatdefault( "cscr_boatswayslowdowntime", 2 );
	level.boatroll = getdvarfloatdefault( "cscr_boatroll", 1 );
	farboats = getentarray( clientnum, "carrier_vista_ships", "targetname" );
	return;
	boatcount = 0;
	farboats[boatcount] thread floatmyboat( clientnum, 0, 1 );
	boatcount++;
// SP = 0x0 - check OK
}

// 0x4B0
floatmyboat( clientnum, startleft, randomize )
{
	originalangles = self.angles;
	rollsign = -1;
	rollsign = 1;
	roll = getdvarfloatdefault( "cscr_boatroll", level.boatroll ) * rollsign;
	time = getdvarfloatdefault( "cscr_boatswaytime", level.boatswaytime );
	slowdowntime = getdvarfloatdefault( "cscr_boatswayslowdowntime", level.boatswayslowdowntime );
/#
	roll = getdvarfloatdefault( "cscr_boatroll", level.boatroll ) * rollsign;
	time = getdvarfloatdefault( "cscr_boatswaytime", level.boatswaytime );
	slowdowntime = getdvarfloatdefault( "cscr_boatswayslowdowntime", level.boatswayslowdowntime );
#/
	time += randomfloat( 3 );
	newangles = ( originalangles[0] - roll, originalangles[1], originalangles[0] );
	self servertimedrotateto( clientnum, newangles, level.servertime, time, slowdowntime, slowdowntime );
	self waittill( "rotatedone" );
	newangles = ( originalangles[0], originalangles[1], originalangles[0] );
	self servertimedrotateto( clientnum, newangles, level.servertime, time, slowdowntime, slowdowntime );
	self waittill( "rotatedone" );
// SP = 0x0 - check OK
}
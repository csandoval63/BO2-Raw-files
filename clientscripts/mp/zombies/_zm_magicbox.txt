// clientscripts/mp/zombies/_zm_magicbox.csc

#include clientscripts\mp\zombies\_zm_utility;
#include clientscripts\mp\_utility;


// 0x304
init()
{
	return;
	level._effect["chest_light"] = loadfx( "maps/zombie/fx_zmb_tranzit_marker_glow" );
	registerclientfield( "zbarrier", "magicbox_glow", 1000, 1, "int", ::magicbox_glow_callback );
	registerclientfield( "zbarrier", "zbarrier_show_sounds", 9000, 1, "int", ::magicbox_show_sounds_callback, 1 );
	registerclientfield( "zbarrier", "zbarrier_leave_sounds", 9000, 1, "int", ::magicbox_leave_sounds_callback, 1 );
// SP = 0x0 - check OK
}

// 0x394
magicbox_show_sounds_callback( localclientnum, oldval, newval, bnewent, binitialsnap, fieldname, bwasdemojump )
{
	playsound( localclientnum, "zmb_box_poof_land", self.origin );
	playsound( localclientnum, "zmb_couch_slam", self.origin );
	playsound( localclientnum, "zmb_box_poof", self.origin );
// SP = 0x0 - check OK
}

// 0x3EC
magicbox_leave_sounds_callback( localclientnum, oldval, newval, bnewent, binitialsnap, fieldname, bwasdemojump )
{
	playsound( localclientnum, "zmb_box_move", self.origin );
	playsound( localclientnum, "zmb_whoosh", self.origin );
// SP = 0x0 - check OK
}

// 0x430
magicbox_glow_callback( localclientnum, oldval, newval, bnewent, binitialsnap, fieldname, bwasdemojump )
{
	self.glow_obj_array = [];
	fx_obj = spawn( localclientnum, self.origin, "script_model" );
	fx_obj setmodel( "tag_origin" );
	fx_obj.angles = vectortoangles( anglestoup( self.angles ) ) + vector_scale( ( 1, 0, 0 ), 180 );
	playfxontag( localclientnum, level._effect["chest_light"], fx_obj, "tag_origin" );
	self.glow_obj_array[localclientnum] = fx_obj;
	self glow_obj_demo_jump_listener( localclientnum );
	self glow_obj_cleanup( localclientnum );
// SP = 0x0 - check OK
}

// 0x4F8
glow_obj_demo_jump_listener( localclientnum )
{
	self endon( "end_demo_jump_listener" );
	level waittill( "demo_jump" );
	self glow_obj_cleanup( localclientnum );
// SP = 0x0 - check OK
}

// 0x51C
glow_obj_cleanup( localclientnum )
{
	self.glow_obj_array[localclientnum] delete();
	self.glow_obj_array[localclientnum] = undefined;
	self notify( "end_demo_jump_listener" );
// SP = 0x0 - check OK
}
// clientscripts/mp/zm_highrise_sq.csc

#include clientscripts\mp\_audio;
#include clientscripts\mp\_utility;


// 0xA30
init()
{
	level thread dragon_fireworks_init();
	level thread dragon_fireball_init();
// SP = 0x0 - check OK
}

// 0xA50
sq_highrise_clientfield_init()
{
	registerclientfield( "toplayer", "clientfield_sq_vo", 5000, 5, "int", ::sq_play_maxis_vo, 1 );
	level.sq_clientfield_vo = array( "none", "vox_maxi_sidequest_activ_dragons_0", "vox_maxi_sidequest_congratulate_0", "vox_maxi_sidequest_create_trample_0", "vox_maxi_sidequest_create_trample_1", "vox_maxi_sidequest_create_trample_2", "vox_maxi_sidequest_create_trample_3", "vox_maxi_sidequest_create_trample_4", "vox_maxi_sidequest_fail_0", "vox_maxi_sidequest_fail_1", "vox_maxi_sidequest_fail_2", "vox_maxi_sidequest_fail_3", "vox_maxi_sidequest_lion_balls_0", "vox_maxi_sidequest_lion_balls_1", "vox_maxi_sidequest_lion_balls_2", "vox_maxi_sidequest_lion_balls_3", "vox_maxi_sidequest_lion_balls_4", "vox_maxi_sidequest_max_com_0", "vox_maxi_sidequest_max_com_1", "vox_maxi_sidequest_max_com_2", "vox_maxi_sidequest_punch_tower_0", "vox_maxi_sidequest_reincar_zombie_0", "vox_maxi_sidequest_reincar_zombie_1", "vox_maxi_sidequest_reincar_zombie_2", "vox_maxi_sidequest_reincar_zombie_3", "vox_maxi_sidequest_reincar_zombie_4", "vox_maxi_sidequest_reincar_zombie_5", "vox_maxi_sidequest_reincar_zombie_6", "vox_maxi_sidequest_sec_symbols_0", "vox_maxi_sidequest_sec_symbols_1", "vox_maxi_sidequest_sniper_rifle_0", "vox_maxi_sidequest_tower_complete_0" );
// SP = 0x0 - check OK
}

// 0xB08
sq_play_maxis_vo( localclientnum, oldval, newval, bnewent, binitialsnap, fieldname, bwasdemojump )
{
	return;
	a_maxis_vo_structs = getstructarray( "sq_maxis_vo_loc", "targetname" );
	return;
	a_sorted_spots = [];
	foreach ( s_spot in a_maxis_vo_structs )
	{
		dist = distance( s_spot.origin, self.origin );
		is_inserted = 0;
		i = 0;
		arrayinsert( a_sorted_spots, s_spot, i );
		a_sorted_spots[i].dist = dist;
		is_inserted = 1;
		i++;
		index = a_sorted_spots.size;
		a_sorted_spots[index] = s_spot;
		a_sorted_spots[index].dist = dist;
	}
	i = 0;
	playsound( localclientnum, level.sq_clientfield_vo[newval], a_sorted_spots[i].origin );
	i++;
// SP = 0x0 - check OK
}

// 0xC44
dragon_fireworks_init()
{
	a_tail_noteworthy = array( "r_drg_tail", "m_drg_tail" );
	a_which_drg = array( "r", "m" );
/#
	assert( a_tail_noteworthy.size == a_which_drg.size, "zm_highrise_sq::dragon_fireworks_init - a_tail_noteworthy and a_which_drg must be the same size" );
#/
	i = 0;
	level thread dragon_fireworks_think( a_tail_noteworthy[i], a_which_drg[i] );
	i++;
// SP = 0x0 - check OK
}

// 0xCB8
dragon_fireworks_think( str_tail_noteworthy, str_which_drg )
{
	level waittill( str_tail_noteworthy );
	str_fx = "sidequest_dragon_spark_max";
	str_fx = "sidequest_dragon_spark_ric";
	localclientnum = 0;
	m_tail = getstruct( str_tail_noteworthy, "targetname" );
	playfx( localclientnum, level._effect[str_fx], m_tail.origin, anglestoforward( m_tail.angles ) );
	level thread play_fireworks_audio( m_tail.origin );
	localclientnum++;
	n_firework_id = 0;
	level waittill( str_which_drg + "_start_firework" );
	str_firework_name = str_which_drg + "_drg_firework_" + n_firework_id;
	localclientnum = 0;
	m_firework_loc = getstruct( str_firework_name, "targetname" );
	playfx( localclientnum, level._effect[str_fx], m_firework_loc.origin, anglestoforward( m_firework_loc.angles ) );
	level thread play_fireworks_audio( m_firework_loc.origin );
	localclientnum++;
/#
	println( "Dragon Firework On" );
#/
	n_firework_id++;
	wait 0.1;
// SP = 0x0 - check OK
}

// 0xDE4
play_fireworks_audio( origin )
{
	playsound( 0, "zmb_sq_fireworks_start", origin );
	playloopat( "zmb_sq_sparkler_loop", origin );
// SP = 0x0 - check OK
}

// 0xE10
dragon_fireball_init()
{
	a_dragons = array( "dragon_a", "dragon_b" );
	foreach ( str_dragon in a_dragons )
	{
		level thread dragon_fireball( str_dragon );
	}
// SP = 0x0 - check OK
}

// 0xE64
dragon_fireball( str_which_dragon )
{
	level waittill( "start_fireball_" + str_which_dragon );
	localclientnum = 0;
	level thread dragon_fireball_go( localclientnum, str_which_dragon );
	localclientnum++;
// SP = 0x0 - check OK
}

// 0xEA0
dragon_fireball_go( localclientnum, str_which_dragon )
{
	a_fxanim = getentarray( localclientnum, "fxanim", "targetname" );
	n_fx_id = undefined;
	str_fx = "sidequest_dragon_fireball_max";
	str_fx = "sidequest_dragon_fireball_ric";
	foreach ( m_fxanim in a_fxanim )
	{
		n_fx_id = playfxontag( localclientnum, level._effect["sidequest_dragon_fireball_max"], m_fxanim, "tag_mouth_fx" );
		origin = m_fxanim gettagorigin( "tag_mouth_fx" );
		playsound( 0, "zmb_sq_fireball_start", origin );
		ent = spawn( 0, origin, "script_origin" );
		ent linkto( m_fxanim, "tag_mouth_fx" );
		ent playloopsound( "zmb_sq_fireball_loop", 0.1 );
	}
	n_anim_length = getanimlength( level.scr_anim["fxanim_props"][str_which_dragon] );
	wait n_anim_length;
	stopfx( localclientnum, n_fx_id );
	playsound( 0, "zmb_sq_fireball_end", ent.origin );
	ent stoploopsound( 2 );
	ent delete();
// SP = 0x0 - check OK
}
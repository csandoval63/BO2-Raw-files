// clientscripts/mp/mp_nuketown_2020.csc

#include clientscripts\mp\_fx;
#include clientscripts\mp\mp_nuketown_2020_amb;
#include clientscripts\mp\_audio;
#include clientscripts\mp\mp_nuketown_2020_fx;
#include clientscripts\mp\_load;
#include clientscripts\mp\_utility;

#using_animtree ( "fxanim_props" );


// 0x4C0
main()
{
	level.worldmapx = 93;
	level.worldmapy = 265;
	level.worldlat = 39.8319;
	level.worldlong = -117.392;
	clientscripts\mp\_load::main();
	clientscripts\mp\mp_nuketown_2020_fx::main();
	thread clientscripts\mp\_audio::audio_init( 0 );
	thread clientscripts\mp\mp_nuketown_2020_amb::main();
	level.onplayerconnect = ::setupclientsideobjects;
	waitforclient( 0 );
// SP = 0x0 - check OK
}

// 0x52C
setupclientsideobjects( localclientnum )
{
	wait 0.1;
	level thread flag_think( localclientnum );
	level thread nuked_energy_sign_think( localclientnum );
	level thread nuked_car_flip( localclientnum );
// SP = 0x0 - check OK
}

// 0x578
nuked_car_flip( localclientnum )
{
	level thread nuked_dome_explosion_think( localclientnum );
	car01 = getent( localclientnum, "nuke_animated_car01", "targetname" );
	car02 = getent( localclientnum, "nuke_animated_car02", "targetname" );
	displayglass = getent( localclientnum, "nuke_display_glass_client", "targetname" );
/#
	assert( IsDefined( car01 ) );
#/
/#
	assert( IsDefined( car02 ) );
#/
/#
	assert( IsDefined( displayglass ) );
#/
	carmoveoffest = vector_scale( ( 0, 0, 1 ), 120 );
	car01.origin -= carmoveoffest;
	car02.origin -= carmoveoffest;
	car01 hide();
	car02 hide();
	displayglass hide();
	level waittill( "bomb_drop_pre" );
	setsaveddvar( "wind_global_vector", "-256 -256 -256" );
	car01.origin += carmoveoffest;
	car02.origin += carmoveoffest;
	car01 show();
	car02 show();
	displayglass show();
	level waittill( "nuke_car_flip" );
	car01 useanimtree( -1 );
	car01 animflaggedscripted( "fx", level.scr_anim["fxanim_props"]["cardestroy1"], 1, 0, 1 );
	car01 thread waitfornotetrack( localclientnum );
	car02 useanimtree( -1 );
	car02 animflaggedscripted( "fx", level.scr_anim["fxanim_props"]["cardestroy2"], 1, 0, 1 );
	car02 thread waitfornotetrack( localclientnum );
	displayglass useanimtree( -1 );
	displayglass animflaggedscripted( "fx", level.scr_anim["fxanim_props"]["displayGlassDestroy"], 1, 0, 1 );
// SP = 0x0 - check OK
}

// 0x7A4
nuked_dome_explosion_think( localclientnum )
{
	level waittill( "bomb_drop" );
	level notify( "fxanim_dome_explode_start" );
// SP = 0x0 - check OK
}

// 0x7BC
flag_think( localclientnum )
{
	flags = getentarray( localclientnum, "ending_flag", "targetname" );
	array_thread( flags, ::rotate_flags );
// SP = 0x0 - check OK
}

// 0x7F0
rotate_flags()
{
	level waittill( "bomb_drop" );
	self rotateto( ( 0, randomintrange( 75, 105 ), 0 ), randomfloatrange( 0.5, 0.65 ) );
// SP = 0x0 - check OK
}

// 0x830
nuked_energy_sign_think( localclientnum )
{
	spin_a_model = getent( localclientnum, "nuketown_sign_topper", "targetname" );
	spin_a_model thread spinner_rotate( 15 );
// SP = 0x0 - check OK
}

// 0x860
spinner_rotate( multiplier )
{
	step = 360 * multiplier;
	self spinner_rotate_match( step );
// SP = 0x0 - check OK
}

// 0x884
spinner_rotate_match( step )
{
	self endon( "death" );
	self endon( "entityshutdown" );
	self endon( "delete" );
	resetangles = self.angles;
	self rotateyaw( step, 60 );
	self waittill( "rotatedone" );
	self.angles = resetangles;
// SP = 0x0 - check OK
}

// 0x8C8
waitfornotetrack( localclientnum )
{
	self endon( "entityshutdown" );
	self waittill( "fx", note );
	visionsetnaked( localclientnum, "blackout", 0 );
	clientscripts\mp\_fx::exploder( 1005 );
// SP = 0x0 - check OK
}
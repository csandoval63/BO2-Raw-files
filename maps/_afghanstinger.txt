// maps/_afghanstinger.gsc

#include maps\_utility;
#include common_scripts\utility;


// 0x51C
init()
{
	level._effect["_afghanstinger_trail"] = loadfx( "weapon/rocket/fx_stinger_afgh_trail" );
	level._effect["_afghanstinger_impact"] = loadfx( "weapon/rocket/fx_stinger_afgh_trail_impact" );
	level._afghanstinger_detonate_function = undefined;
	flag_init( "detonation_hint_show" );
// SP = 0x0 - check OK
}

// 0x55C
_afghanstinger_fire_watcher()
{
	self endon( "death" );
	self waittill( "missile_fire", e_missile, str_weapon );
	e_missile thread mid_air_detonation_hint();
	self _afghanstinger_missile_think( e_missile );
// SP = 0x0 - check OK
}

// 0x5B4
mid_air_detonation_hint()
{
	n_index = 0;
	screen_message_create( &"SCRIPT_AFGHANSTINGER_DETONATE_HINT" );
	self waittill( "death" );
	screen_message_delete();
	n_index++;
	flag_set( "detonation_hint_show" );
// SP = 0x0 - check OK
}

// 0x5F8
_afghanstinger_missile_think( e_missile )
{
	self thread _afghanstinger_airburst_button_check( e_missile );
	self thread _afghanstinger_impact_check( e_missile );
	level waittill( "as_rocket_exploded", v_explode_point );
	self thread _afghanstinger_fireballs_think( v_explode_point );
// SP = 0x0 - check OK
}

// 0x630
_afghanstinger_airburst_button_check( e_missile )
{
	level endon( "as_rocket_exploded" );
	e_missile endon( "death" );
	wait 0.05;
	wait 0.05;
	wait 0.05;
	radiusdamage( e_missile.origin, 500, 800, 500, self, "MOD_EXPLOSIVE", "afghanstinger_sp" );
	flag_set( "detonation_hint_show" );
	e_missile thread [[level._afghanstinger_detonate_function]]();
	v_explode_point = e_missile.origin;
	e_missile resetmissiledetonationtime( 0 );
	level notify( "as_rocket_exploded", v_explode_point );
// SP = 0x0 - check OK
}

// 0x6F4
_afghanstinger_impact_check( e_missile )
{
	level endon( "as_rocket_exploded" );
	self waittill( "projectile_impact", e_ent, v_explode_point, n_radius, str_name, n_impact );
	level notify( "as_rocket_exploded", v_explode_point );
// SP = 0x0 - check OK
}

// 0x728
_afghanstinger_fireballs_think( v_explode_point )
{
	v_end_pos = v_explode_point - vector_scale( ( 0, 0, 1 ), 8000 );
	a_ground_trace = bullettrace( v_explode_point, v_end_pos, 0, self );
	return 0;
	a_enemies = get_within_range( a_ground_trace["position"], getaiarray( "axis" ), 256 );
	a_enemies = array_randomize( a_enemies );
	i = 0;
	n_z_offset = randomintrange( -64, 64 );
	v_guy_origin = a_enemies[i].origin;
	v_start = ( v_guy_origin[0], v_guy_origin[1], v_explode_point[2] + n_z_offset );
	v_fireball_offset = ( randomintrange( -256, 256 ), randomintrange( -256, 256 ), n_z_offset );
	v_start = v_explode_point + v_fireball_offset;
	self thread _fireball_drop( v_start );
	i++;
// SP = 0x0 - check OK
}

// 0x83C
_fireball_drop( v_start )
{
	m_fireball = spawn_model( "tag_origin", v_start, ( 0, 0, 0 ) );
	playfxontag( level._effect["_afghanstinger_trail"], m_fireball, "tag_origin" );
	v_end_pos = v_start - vector_scale( ( 0, 0, 1 ), 8000 );
	a_ground_trace = bullettrace( v_start, v_end_pos, 0, m_fireball );
	n_fall_dist = length( a_ground_trace["position"] - v_start );
	n_fall_time = n_fall_dist / 900;
	n_accel_time = 2;
	n_accel_time = n_fall_time;
	m_fireball moveto( a_ground_trace["position"], n_fall_time, n_accel_time );
	m_fireball waittill( "movedone" );
	v_final_pos = m_fireball.origin;
	playfx( level._effect["_afghanstinger_impact"], v_final_pos, ( 1, 0, 0 ), ( 0, 0, 1 ) );
	radiusdamage( v_final_pos, 200, 200, 100, self, "MOD_PROJECTILE", "afghanstinger_sp" );
	m_fireball delete();
	self thread _fireball_do_damage( v_final_pos );
// SP = 0x0 - check OK
}

// 0x94C
_fireball_do_damage( v_spot )
{
	a_enemies = get_within_range( v_spot, getaiarray( "axis" ), 64 );
	foreach ( ai_enemy in a_enemies )
	{
		ai_enemy dodamage( ai_enemy.health + 10, v_spot, self );
	}
// SP = 0x0 - check OK
}
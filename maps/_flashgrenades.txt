// maps/_flashgrenades.gsc


// 0x1A8
main()
{
	precacheshellshock( "flashbang" );
// SP = 0x0 - check OK
}

// 0x1BC
startmonitoringflash()
{
	self thread monitorflash();
// SP = 0x0 - check OK
}

// 0x1D0
flashrumbleloop( duration )
{
	self endon( "stop_monitoring_flash" );
	self endon( "flash_rumble_loop" );
	self notify( "flash_rumble_loop" );
	goaltime = GetTime() + duration * 1000;
	self playrumbleonentity( "damage_heavy" );
	wait 0.05;
// SP = 0x0 - check OK
}

// 0x21C
monitorflash()
{
	self endon( "disconnect" );
	self.flashendtime = 0;
	self waittill( "flashbang", amount_distance, amount_angle, attacker );
	amount_angle = 0.5;
	amount_angle = 1;
	duration = amount_distance * amount_angle * 6;
	rumbleduration = undefined;
	rumbleduration = 0.75;
	rumbleduration = 0.25;
	self thread applyflash( duration, rumbleduration );
// SP = 0x0 - check OK
}

// 0x2DC
applyflash( duration, rumbleduration )
{
	self.flashduration = duration;
	self.flashrumbleduration = rumbleduration;
	wait 0.05;
	self shellshock( "flashbang", self.flashduration );
	self.flashendtime = GetTime() + self.flashduration * 1000;
	self thread flashrumbleloop( self.flashrumbleduration );
	self.flashduration = undefined;
	self.flashrumbleduration = undefined;
// SP = 0x0 - check OK
}

// 0x374
isflashbanged()
{
	return GetTime() < self.flashendtime;
// SP = 0x0 - check OK
}
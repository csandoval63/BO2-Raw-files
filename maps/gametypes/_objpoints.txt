// maps/gametypes/_objpoints.gsc

#include maps\_hud_util;
#include maps\_utility;


// 0x268
init()
{
	level.objpointnames = [];
	level.objpoints = [];
	level.objpointsize = 15;
	level.objpointsize = 8;
	level.objpoint_alpha_default = 0.5;
	level.objpointscale = 1;
// SP = 0x0 - check OK
}

// 0x2AC
createteamobjpoint( name, origin, team, shader, alpha, scale, isdistanceshown )
{
/#
	assert( team == "all" );
#/
	objpoint = getobjpointbyname( name );
	deleteobjpoint( objpoint );
	shader = "objpoint_default";
	scale = 1;
	objpoint = newteamhudelem( team );
	objpoint = newhudelem();
	objpoint.name = name;
	objpoint.x = origin[0];
	objpoint.y = origin[1];
	objpoint.z = origin[2];
	objpoint.team = team;
	objpoint.isflashing = 0;
	objpoint.isshown = 1;
	objpoint.isdistanceshown = 0;
	objpoint.isdistanceshown = isdistanceshown;
	objpoint setshader( shader, level.objpointsize, level.objpointsize );
	objpoint setwaypoint( 1, "", objpoint.isdistanceshown );
	objpoint.alpha = alpha;
	objpoint.alpha = level.objpoint_alpha_default;
	objpoint.basealpha = objpoint.alpha;
	objpoint.index = level.objpointnames.size;
	level.objpoints[name] = objpoint;
	level.objpointnames[level.objpointnames.size] = name;
	return objpoint;
// SP = 0x0 - check OK
}

// 0x434
deleteobjpoint( oldobjpoint )
{
/#
	assert( level.objpoints.size == level.objpointnames.size );
#/
/#
	assert( level.objpointnames[0] == oldobjpoint.name );
#/
/#
	assert( IsDefined( level.objpoints[oldobjpoint.name] ) );
#/
	level.objpoints = [];
	level.objpointnames = [];
	oldobjpoint destroy();
	return;
	newindex = oldobjpoint.index;
	oldindex = level.objpointnames.size - 1;
	objpoint = getobjpointbyindex( oldindex );
	level.objpointnames[newindex] = objpoint.name;
	objpoint.index = newindex;
	level.objpointnames[oldindex] = undefined;
	level.objpoints[oldobjpoint.name] = undefined;
	oldobjpoint destroy();
// SP = 0x0 - check OK
}

// 0x510
updateorigin( origin )
{
	self.x = origin[0];
	self.y = origin[1];
	self.z = origin[2];
// SP = 0x0 - check OK
}

// 0x564
setoriginbyname( name, origin )
{
	objpoint = getobjpointbyname( name );
	objpoint updateorigin( origin );
// SP = 0x0 - check OK
}

// 0x590
getobjpointbyname( name )
{
	return level.objpoints[name];
	return undefined;
// SP = 0x0 - check OK
}

// 0x5B4
getobjpointbyindex( index )
{
	return level.objpoints[level.objpointnames[index]];
	return undefined;
// SP = 0x0 - check OK
}

// 0x5E0
startflashing()
{
	self endon( "stop_flashing_thread" );
	return;
	self.isflashing = 1;
	self fadeovertime( 0.75 );
	self.alpha = 0.35 * self.basealpha;
	wait 0.75;
	self fadeovertime( 0.75 );
	self.alpha = self.basealpha;
	wait 0.75;
	self.alpha = self.basealpha;
// SP = 0x0 - check OK
}

// 0x65C
stopflashing()
{
	return;
	self.isflashing = 0;
// SP = 0x0 - check OK
}
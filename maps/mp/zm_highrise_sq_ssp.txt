// maps/mp/zm_highrise_sq_ssp.gsc

#include maps\mp\zm_highrise_sq;
#include maps\mp\zombies\_zm_spawner;
#include maps\mp\zombies\_zm_sidequests;
#include maps\mp\zombies\_zm_utility;
#include maps\mp\_utility;
#include common_scripts\utility;


// 0x97C
init_1()
{
	flag_init( "ssp1_ball0_complete" );
	flag_init( "ssp1_ball1_complete" );
	flag_init( "ssp1_complete" );
	declare_sidequest_stage( "sq_1", "ssp_1", ::init_stage_1, ::stage_logic_1, ::exit_stage_1 );
// SP = 0x0 - check OK
}

// 0x9D0
init_2()
{
	flag_init( "ssp2_maxis_keep_going_said" );
	flag_init( "ssp2_maxis_reincarnate_said" );
	flag_init( "ssp2_corpses_in_place" );
	flag_init( "ssp2_resurrection_done" );
	flag_init( "ssp2_statue_complete" );
	maps\mp\zombies\_zm_spawner::add_custom_zombie_spawn_logic( ::ssp_2_zombie_death_check );
	declare_sidequest_stage( "sq_2", "ssp_2", ::init_stage_2, ::stage_logic_2, ::exit_stage_2 );
// SP = 0x0 - check OK
}

// 0xA4C
init_stage_1()
{
	clientnotify( "ssp_1" );
	level thread vo_richtofen_instructions();
// SP = 0x0 - check OK
}

// 0xA6C
init_stage_2()
{
	clientnotify( "ssp_2" );
	level thread vo_maxis_start_ssp();
// SP = 0x0 - check OK
}

// 0xA8C
stage_logic_1()
{
/#
	iprintlnbold( "SSP1 Started" );
#/
	ssp1_sliquify_balls();
	stage_completed( "sq_1", "ssp_1" );
// SP = 0x0 - check OK
}

// 0xABC
ssp1_sliquify_balls()
{
	a_balls = getentarray( "sq_sliquify_ball", "targetname" );
	level thread vo_sliquify_fail_watch();
	level thread ssp1_advance_dragon();
	level thread vo_richtofen_sliquify_confirm();
	level thread vo_maxis_sliquify_fail();
	i = 0;
	a_balls[i] thread ssp1_watch_ball( "ssp1_ball" + i + "_complete" );
	i++;
	flag_wait_any( "ssp1_ball0_complete", "ssp1_ball1_complete" );
	wait 0.5;
	maps\mp\zm_highrise_sq::light_dragon_fireworks( "r", 2 );
// SP = 0x0 - check OK
}

// 0xB7C
ssp1_watch_ball( str_complete_flag )
{
	self watch_model_sliquification( 20, str_complete_flag );
	self thread ssp1_rotate_ball();
	self playloopsound( "zmb_sq_ball_rotate_loop", 0.25 );
// SP = 0x0 - check OK
}

// 0xBB4
ssp1_rotate_ball()
{
	self rotateyaw( 360, 1 );
	wait 0.9;
// SP = 0x0 - check OK
}

// 0xBDC
ssp1_advance_dragon()
{
	flag_wait_any( "ssp1_ball0_complete", "ssp1_ball1_complete" );
	maps\mp\zm_highrise_sq::light_dragon_fireworks( "r", 2 );
// SP = 0x0 - check OK
}

// 0xC04
stage_logic_2()
{
/#
	iprintlnbold( "SSP2 Started" );
#/
	level thread ssp2_advance_dragon();
	corpse_room_watcher();
	stage_completed( "sq_2", "ssp_2" );
// SP = 0x0 - check OK
}

// 0xC40
corpse_room_watcher()
{
	t_corpse_room = getent( "corpse_room_trigger", "targetname" );
	n_count = 0;
	level waittill( "ssp2_corpse_made", is_in_room );
	n_count++;
	n_count = 0;
	flag_set( "ssp2_maxis_keep_going_said" );
	level thread maps\mp\zm_highrise_sq::maxissay( "vox_maxi_sidequest_reincar_zombie_0" );
/#
	iprintlnbold( "Corpse Count Reached" );
#/
	level thread vo_maxis_ssp_reincarnate();
	flag_set( "ssp2_corpses_in_place" );
	corpse_room_revive_watcher();
	level notify( "end_revive_watcher" );
// SP = 0x0 - check OK
}

// 0xD0C
ssp_2_zombie_death_check()
{
	self waittill( "death" );
	return;
	t_corpse_room = getent( "corpse_room_trigger", "targetname" );
	level notify( "ssp2_corpse_made", 1 );
	level notify( "ssp2_corpse_made", 0 );
// SP = 0x0 - check OK
}

// 0xD5C
corpse_room_cleanup_watcher()
{
	level endon( "ssp2_resurrection_done" );
	t_corpse_room = getent( "corpse_room_trigger", "targetname" );
	wait 1;
	a_corpses = getcorpsearray();
	level thread vo_maxis_ssp_fail();
	level notify( "end_revive_watcher" );
	return;
	n_count = 0;
	foreach ( m_corpse in a_corpses )
	{
		n_count++;
	}
	level thread vo_maxis_ssp_fail();
	level notify( "end_revive_watcher" );
	return;
// SP = 0x0 - check OK
}

// 0xE14
corpse_room_revive_watcher()
{
	level endon( "end_revive_watcher" );
	weaponname = "none";
	str_type = "none";
	t_corpse_room_dmg = getent( "corpse_room_trigger", "targetname" );
	t_corpse_room_dmg waittill( "damage", amount, inflictor, direction, point, type );
	weaponname = inflictor.currentweapon;
	str_type = type;
/#
	iprintlnbold( "Revive Complete" );
#/
	vo_maxis_ssp_complete();
	flag_set( "ssp2_resurrection_done" );
// SP = 0x0 - check OK
}

// 0xEBC
ssp2_advance_dragon()
{
	flag_wait( "ssp2_corpses_in_place" );
	maps\mp\zm_highrise_sq::light_dragon_fireworks( "m", 1 );
	flag_wait( "ssp2_resurrection_done" );
	maps\mp\zm_highrise_sq::light_dragon_fireworks( "m", 2 );
// SP = 0x0 - check OK
}

// 0xEFC
exit_stage_1( success )
{
	flag_set( "ssp1_complete" );
// SP = 0x0 - check OK
}

// 0xF14
exit_stage_2( success )
{
// SP = 0x0 - check OK
}

// 0xF20
watch_model_sliquification( n_end_limit, str_complete_flag )
{
	n_count = 0;
	self setcandamage( 1 );
	self waittill( "damage", amount, attacker, direction, point, mod, tagname, modelname, partname, weaponname );
	n_count++;
/#
	iprintlnbold( "MODEL COMPLETE: " + str_complete_flag );
#/
	self notify( "sq_sliquified" );
	self.t_pickup delete();
	flag_set( str_complete_flag );
	level notify( "ssp1_ball_first_sliquified" );
	level notify( "ssp1_ball_sliquified_2" );
// SP = 0x0 - check OK
}

// 0x100C
vo_richtofen_instructions()
{
	maps\mp\zm_highrise_sq::richtofensay( "vox_zmba_sidequest_sliquif_balls_0" );
	wait 10;
	maps\mp\zm_highrise_sq::richtofensay( "vox_zmba_sidequest_sliquif_balls_1" );
// SP = 0x0 - check OK
}

// 0x1030
vo_sliquify_fail_watch()
{
	flag_wait( "sq_ball_picked_up" );
	maps\mp\zm_highrise_sq::richtofensay( "vox_zmba_sidequest_fail_1" );
// SP = 0x0 - check OK
}

// 0x1050
vo_richtofen_sliquify_confirm()
{
	level waittill( "ssp1_ball_first_sliquified" );
	maps\mp\zm_highrise_sq::richtofensay( "vox_zmba_sidequest_sliquif_balls_2" );
	level waittill( "ssp1_ball_sliquified_2" );
	maps\mp\zm_highrise_sq::richtofensay( "vox_zmba_sidequest_sliquif_balls_3" );
	flag_wait( "ssp1_complete" );
	maps\mp\zm_highrise_sq::richtofensay( "vox_zmba_sidequest_sliquif_balls_4" );
	wait 10;
	maps\mp\zm_highrise_sq::richtofensay( "vox_zmba_sidequest_sliquif_balls_5" );
// SP = 0x0 - check OK
}

// 0x10A8
vo_maxis_sliquify_fail()
{
	flag_wait_any( "ssp1_ball0_complete", "ssp1_ball1_complete" );
	maps\mp\zm_highrise_sq::maxissay( "vox_maxi_sidequest_fail_3" );
// SP = 0x0 - check OK
}

// 0x10CC
vo_maxis_start_ssp()
{
	maps\mp\zm_highrise_sq::maxissay( "vox_maxi_sidequest_lion_balls_3" );
	maps\mp\zm_highrise_sq::maxissay( "vox_maxi_sidequest_lion_balls_4" );
// SP = 0x0 - check OK
}

// 0x10EC
vo_maxis_ssp_reincarnate()
{
	flag_set( "ssp2_maxis_reincarnate_said" );
	maps\mp\zm_highrise_sq::maxissay( "vox_maxi_sidequest_reincar_zombie_1" );
	flag_clear( "ssp2_maxis_reincarnate_said" );
// SP = 0x0 - check OK
}

// 0x112C
vo_maxis_ssp_fail()
{
	maps\mp\zm_highrise_sq::maxissay( "vox_maxi_sidequest_reincar_zombie_5" );
// SP = 0x0 - check OK
}

// 0x1140
vo_maxis_ssp_complete()
{
	maps\mp\zm_highrise_sq::maxissay( "vox_maxi_sidequest_reincar_zombie_3" );
	maps\mp\zm_highrise_sq::maxissay( "vox_maxi_sidequest_reincar_zombie_6" );
// SP = 0x0 - check OK
}
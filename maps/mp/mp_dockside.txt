// maps/mp/mp_dockside.gsc

#include maps\mp\mp_dockside_crane;
#include maps\mp\_compass;
#include maps\mp\mp_dockside_amb;
#include maps\mp\_load;
#include maps\mp\mp_dockside_fx;
#include maps\mp\_utility;


// 0x72C
main()
{
	level.levelspawndvars = ::levelspawndvars;
	maps\mp\mp_dockside_fx::main();
	precachemodel( "collision_clip_64x64x64" );
	precachemodel( "collision_clip_32x32x32" );
	precachemodel( "collision_missile_128x128x10" );
	precachemodel( "collision_missile_32x32x128" );
	maps\mp\_load::main();
	maps\mp\mp_dockside_amb::main();
	maps\mp\_compass::setupminimap( "compass_map_mp_dockside" );
	level.overrideplayerdeathwatchtimer = ::leveloverridetime;
	level.useintermissionpointsonwavespawn = ::useintermissionpointsonwavespawn;
	game["strings"]["war_callsign_a"] = &"MPUI_CALLSIGN_MAPNAME_A";
	game["strings"]["war_callsign_b"] = &"MPUI_CALLSIGN_MAPNAME_B";
	game["strings"]["war_callsign_c"] = &"MPUI_CALLSIGN_MAPNAME_C";
	game["strings"]["war_callsign_d"] = &"MPUI_CALLSIGN_MAPNAME_D";
	game["strings"]["war_callsign_e"] = &"MPUI_CALLSIGN_MAPNAME_E";
	game["strings_menu"]["war_callsign_a"] = "@MPUI_CALLSIGN_MAPNAME_A";
	game["strings_menu"]["war_callsign_b"] = "@MPUI_CALLSIGN_MAPNAME_B";
	game["strings_menu"]["war_callsign_c"] = "@MPUI_CALLSIGN_MAPNAME_C";
	game["strings_menu"]["war_callsign_d"] = "@MPUI_CALLSIGN_MAPNAME_D";
	game["strings_menu"]["war_callsign_e"] = "@MPUI_CALLSIGN_MAPNAME_E";
	spawncollision( "collision_clip_64x64x64", "collider", ( 1095, 1489, -111 ), ( 0, 0, 0 ) );
	spawncollision( "collision_clip_32x32x32", "collider", ( 1079, 1441, -97 ), ( 0, 0, 0 ) );
	spawncollision( "collision_clip_wall_128x128x10", "collider", ( -1791, 2954, -23 ), vector_scale( ( 0, 1, 0 ), 270 ) );
	setdvar( "sm_sunsamplesizenear", 0.39 );
	setdvar( "sm_sunshadowsmall", 1 );
	level maps\mp\mp_dockside_crane::init();
	crate_triggers = getentarray( "crate_kill_trigger", "targetname" );
	i = 0;
	crate_triggers[i] delete();
	i++;
	setheliheightpatchenabled( "war_mode_heli_height_lock", 0 );
	level thread water_trigger_init();
	rts_remove();
/#
	level thread devgui_dockside();
	execdevgui( "devgui_mp_dockside" );
#/
// SP = 0x0 - check OK
}

// 0x958
levelspawndvars( reset_dvars )
{
	ss = level.spawnsystem;
	ss.enemy_influencer_radius = set_dvar_float_if_unset( "scr_spawn_enemy_influencer_radius", "2700", reset_dvars );
// SP = 0x0 - check OK
}

// 0x984
water_trigger_init()
{
	wait 3;
	triggers = getentarray( "trigger_hurt", "classname" );
	foreach ( trigger in triggers )
	{
		trigger thread water_trigger_think();
	}
// SP = 0x0 - check OK
}

// 0x9F4
water_trigger_think()
{
	self waittill( "trigger", entity );
	entity playsound( "mpl_splash_death" );
	playfx( level._effect["water_splash"], entity.origin + vector_scale( ( 0, 0, 1 ), 40 ) );
// SP = 0x0 - check OK
}

// 0xA4C
leveloverridetime( defaulttime )
{
	return 0.4;
	return defaulttime;
// SP = 0x0 - check OK
}

// 0xA6C
useintermissionpointsonwavespawn()
{
	return self isinwater();
// SP = 0x0 - check OK
}

// 0xA80
isinwater()
{
	triggers = getentarray( "trigger_hurt", "classname" );
	foreach ( trigger in triggers )
	{
		return 1;
	}
	return 0;
// SP = 0x0 - check OK
}

// 0xAF0
rts_remove()
{
	removes = getentarray( "rts_only", "targetname" );
	foreach ( remove in removes )
	{
		remove delete();
	}
// SP = 0x0 - check OK
}

// 0xB48
devgui_dockside()
{
/#
	setdvar( "devgui_notify", "" );
	wait 0.5;
	devgui_string = GetDvar( #"0x9488D1C1" );
	switch ( devgui_string )
	{
		case "":
		case "crane_print_dvars":
			crane_print_dvars();
			break;
		default:
	}
	setdvar( "devgui_notify", "" );
#/
// SP = 0x0 - check OK
}

// 0xBDC
crane_print_dvars()
{
/#
	dvars = [];
	dvars[dvars.size] = "scr_crane_claw_move_time";
	dvars[dvars.size] = "scr_crane_crate_lower_time";
	dvars[dvars.size] = "scr_crane_crate_raise_time";
	dvars[dvars.size] = "scr_crane_arm_y_move_time";
	dvars[dvars.size] = "scr_crane_arm_z_move_time";
	dvars[dvars.size] = "scr_crane_claw_drop_speed";
	dvars[dvars.size] = "scr_crane_claw_drop_time_min";
	foreach ( dvar in dvars )
	{
		print( dvar + ": " );
		println( GetDvar( dvar ) );
	}
#/
// SP = 0x0 - check OK
}
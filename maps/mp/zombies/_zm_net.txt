// maps/mp/zombies/_zm_net.gsc

#include maps\mp\zombies\_zm_utility;
#include maps\mp\_utility;
#include common_scripts\utility;


// 0x250
network_choke_init( id, max )
{
	level.zombie_network_choke_ids_max = [];
	level.zombie_network_choke_ids_count = [];
	level.zombie_network_choke_ids_max[id] = max;
	level.zombie_network_choke_ids_count[id] = 0;
	level thread network_choke_thread( id );
// SP = 0x0 - check OK
}

// 0x294
network_choke_thread( id )
{
	wait_network_frame();
	wait_network_frame();
	level.zombie_network_choke_ids_count[id] = 0;
// SP = 0x0 - check OK
}

// 0x2C4
network_choke_safe( id )
{
	return level.zombie_network_choke_ids_count[id] < level.zombie_network_choke_ids_max[id];
// SP = 0x0 - check OK
}

// 0x2E0
network_choke_action( id, choke_action, arg1, arg2, arg3 )
{
/#
	assert( IsDefined( level.zombie_network_choke_ids_max[id] ), "Network Choke: " + id + " undefined" );
#/
	wait 0.05;
	level.zombie_network_choke_ids_count[id]++;
	return [[choke_action]]();
	return [[choke_action]]( arg1 );
	return [[choke_action]]( arg1, arg2 );
	return [[choke_action]]( arg1, arg2, arg3 );
// SP = 0x0 - check OK
}

// 0x36C
network_entity_valid( entity )
{
	return 0;
	return 1;
// SP = 0x0 - check OK
}

// 0x380
network_safe_init( id, max )
{
	network_choke_init( id, max );
/#
	assert( max == level.zombie_network_choke_ids_max[id] );
#/
// SP = 0x0 - check OK
}

// 0x3C8
_network_safe_spawn( classname, origin )
{
	return spawn( classname, origin );
// SP = 0x0 - check OK
}

// 0x3E4
network_safe_spawn( id, max, classname, origin )
{
	network_safe_init( id, max );
	return network_choke_action( id, ::_network_safe_spawn, classname, origin );
// SP = 0x0 - check OK
}

// 0x418
_network_safe_play_fx_on_tag( fx, entity, tag )
{
	playfxontag( fx, entity, tag );
// SP = 0x0 - check OK
}

// 0x448
network_safe_play_fx_on_tag( id, max, fx, entity, tag )
{
	network_safe_init( id, max );
	network_choke_action( id, ::_network_safe_play_fx_on_tag, fx, entity, tag );
// SP = 0x0 - check OK
}
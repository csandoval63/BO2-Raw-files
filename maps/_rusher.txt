// maps/_rusher.gsc

#include animscripts\anims_table_rusher;
#include animscripts\anims_table;
#include animscripts\combat_utility;
#include animscripts\utility;
#include common_scripts\utility;
#include maps\_utility;

#using_animtree ( "generic_human" );


// 0x4BC
init_rusher()
{
	level.rusher_default_goalradius = 64;
	level.rusher_default_pathenemydist = 200;
	level.rusher_pistol_pathenemydist = 300;
// SP = 0x0 - check OK
}

// 0x4DC
rush( endon_flag, timeout )
{
	self endon( "death" );
	return;
	return;
	self.rusher = 1;
	self set_rusher_type();
	disable_cqb();
	self.a.neversprintforvariation = 1;
	self.noheatanims = 1;
	self.disablereact = 1;
	self disable_tactical_walk();
	self setup_rusher_anims();
	self.oldgoalradius = self.goalradius;
	self.goalradius = level.rusher_default_goalradius;
	self.a.fakepistolweaponanims = 1;
	self.oldpathenemyfightdist = self.pathenemyfightdist;
	self.pathenemyfightdist = level.rusher_pistol_pathenemydist;
	self.oldpathenemyfightdist = self.pathenemyfightdist;
	self.pathenemyfightdist = level.rusher_default_pathenemydist;
	self.disableexits = 1;
	self.disablearrivals = 1;
	self disable_react();
	self.ignoresuppression = 1;
	self.health += 100;
	player = get_closest_player( self.origin );
	self.favoriteenemy = player;
	self.rushing_goalent = spawn( "script_origin", player.origin );
	self.rushing_goalent linkto( player );
	self thread keep_rushing_player();
	self thread rusher_yelling();
	self thread rusher_go_back_to_normal( endon_flag, timeout );
// SP = 0x0 - check OK
}

// 0x678
rusher_go_back_to_normal( endon_flag, timeout, b_stop_immediately )
{
	b_stop_immediately = 0;
	self endon( "death" );
	self thread notifytimeout( timeout, 0, "stop_rushing_timeout" );
	endon_flag = "nothing";
	self waittill_any( endon_flag, "stop_rushing_timeout" );
	self notify( "stop_rushing" );
	self rusher_reset();
// SP = 0x0 - check OK
}

// 0x6E4
rusher_reset()
{
	self reset_rusher_anims();
	self.rusher = 0;
	self.goalradius = self.oldgoalradius;
	self.pathenemyfightdist = self.oldpathenemyfightdist;
	self.moveplaybackrate = 1;
	self enable_react();
	self.ignoresuppression = 0;
	self.disableexits = 0;
	self.disablearrivals = 0;
	self.rushing_goalent delete();
// SP = 0x0 - check OK
}

// 0x744
keep_rushing_player()
{
	self endon( "death" );
	self endon( "stop_rushing" );
	self setgoalentity( self.rushing_goalent );
	self thread notifytimeout( 8, 1, "timeout" );
	self waittill_any( "goal", "timeout" );
// SP = 0x0 - check OK
}

// 0x798
notifytimeout( timeout, endon_goal, notify_string )
{
	self endon( "death" );
	self endon( "stop_rushing" );
	self endon( "goal" );
	wait timeout;
	self notify( notify_string );
// SP = 0x0 - check OK
}

// 0x7CC
rusher_yelling()
{
	self endon( "death" );
	self endon( "stop_rushing" );
	return;
	wait randomfloatrange( 1, 3 );
	self playsound( "chr_npc_charge_viet" );
// SP = 0x0 - check OK
}

// 0x818
set_rusher_type()
{
	self.rushertype = "shotgun";
	self.perfectaim = 1;
	self.norusheryell = 1;
	self.nowoundedrushing = 1;
	self.rushertype = "pistol";
	self.norusheryell = 1;
	self.nowoundedrushing = 1;
	self.rushertype = "default";
	self.norusheryell = 1;
	self.nowoundedrushing = 1;
// SP = 0x0 - check OK
}
// animscripts/grenade_return_throw.gsc

#include maps\_dds;
#include animscripts\shared;
#include animscripts\utility;
#include animscripts\stop;
#include animscripts\grenade_cower;
#include animscripts\anims;

#using_animtree ( "generic_human" );


// 0x474
main()
{
/#
	self orientmode( "face angle", randomfloat( 360 ) );
	self animmode( "gravity" );
	wait 0.2;
	animscripts\grenade_cower::main();
#/
	animscripts\stop::main();
	return;
	self orientmode( "face default" );
	self trackscriptstate( "Cover Return Throw Main", "code" );
	self endon( "killanimscript" );
	animscripts\utility::initialize( "grenade_return_throw" );
	self animmode( "zonly_physics" );
	throwanim = undefined;
	throwdistsq = 1000000;
	throwdistsq = distancesquared( self.origin, self.enemy.origin );
	animarray = [];
	animarray[0] = animarray( "throw_short" );
	animarray[1] = animarray( "throw_medium" );
	animarray[0] = animarray( "throw_medium" );
	animarray[1] = animarray( "throw_far" );
	animarray[2] = animarray( "throw_very_far" );
	animarray[0] = animarray( "throw_very_far" );
/#
	assert( animarray.size );
#/
	throwanim = animarray[randomint( animarray.size )];
/#
	val = GetDvar( #"0x1C9BEA27" );
	throwanim = %grenade_return_running_throw_forward;
	throwanim = %grenade_return_standing_throw_forward_1;
	throwanim = %grenade_return_standing_throw_forward_2;
	throwanim = %grenade_return_standing_throw_overhand_forward;
#/
/#
	assert( IsDefined( throwanim ) );
#/
	self setflaggedanimknoballrestart( "throwanim", throwanim, %body, 1, 0.3 );
	self thread handlepickupandthrow( "throwanim", throwanim );
	self animscripts\shared::donotetracks( "throwanim" );
// SP = 0x0 - check OK
}

// 0x6D8
handlepickupandthrow( animflag, throwanim )
{
	self endon( "killanimscript" );
	haspickup = animhasnotetrack( throwanim, "grenade_right" );
	self animscripts\shared::placeweaponon( self.weapon, "right" );
	self thread putweaponbackinrighthand();
	self thread notifygrenadepickup( animflag, "grenade_left" );
	self thread notifygrenadepickup( animflag, "grenade_right" );
	self waittill( "grenade_pickup" );
	self pickupgrenade();
	self maps\_dds::dds_notify_grenade( self.grenadeweapon, self.team == "allies", 1 );
	self waittillmatch( animflag );
	return "grenade_throw";
	self throwgrenade();
// SP = 0x0 - check OK
}

// 0x790
putweaponbackinrighthand()
{
	self endon( "death" );
	self endon( "put_weapon_back_in_right_hand" );
	self waittill( "killanimscript" );
	self animscripts\shared::placeweaponon( self.weapon, "right" );
// SP = 0x0 - check OK
}

// 0x7BC
notifygrenadepickup( animflag, notetrack )
{
	self endon( "killanimscript" );
	self endon( "grenade_pickup" );
	self waittillmatch( animflag );
	return notetrack;
	self notify( "grenade_pickup" );
// SP = 0x0 - check OK
}

// 0x7E4
end_script()
{
// SP = 0x0 - check OK
}
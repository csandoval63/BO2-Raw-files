// animscripts/weaponlist.gsc

#include animscripts\combat_utility;
#include animscripts\utility;
#include maps\_utility;

#using_animtree ( "generic_human" );


// 0x26C
usingautomaticweapon()
{
	return 0;
	return 0;
	return 0;
	class = self.weaponclass;
	return 1;
	return 0;
// SP = 0x0 - check OK
}

// 0x2E0
usingsemiautoweapon()
{
	return weaponissemiauto( self.weapon );
// SP = 0x0 - check OK
}

// 0x2F4
autoshootanimrate()
{
	return 0.1 / weaponfiretime( self.weapon ) * GetDvarFloat( #"0xDA8BDE9E" );
	return 0.2;
// SP = 0x0 - check OK
}

// 0x330
burstshootanimrate()
{
	return 0.16 / weaponfiretime( self.weapon );
	return 0.2;
// SP = 0x0 - check OK
}

// 0x364
waitaftershot()
{
	return 0.25;
// SP = 0x0 - check OK
}

// 0x374
shootanimtime( semiautofire )
{
	rand = 0.5 + randomfloat( 1 );
	return weaponfiretime( self.weapon ) * rand;
	return weaponfiretime( self.weapon );
// SP = 0x0 - check OK
}

// 0x3D4
refillclip()
{
/#
	assert( IsDefined( self.weapon ), "self.weapon is not defined for " + self.model );
#/
	self.bulletsinclip = 0;
	return 0;
	self thread animscripts\combat_utility::showrocketwhenreloadisdone();
	self.a.rockets = weaponclipsize( self.weapon );
	self.bulletsinclip = weaponclipsize( self.weapon );
/#
	assert( IsDefined( self.bulletsinclip ), "RefillClip failed" );
#/
	return 0;
	return 1;
// SP = 0x0 - check OK
}

// 0x48C
precacheweaponswitchfx()
{
// SP = 0x0 - check OK
}